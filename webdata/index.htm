<!doctype html>
<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>LED-Bilderrahmen Webinterface</title>
        <script type="text/javascript">
            updateLock = false;
            apiEndpoint = "/api/data/";

            function fetchData() {
                if (updateLock == true)
                    return;
                updateLock = true;

                var xmlhttp = new XMLHttpRequest();
                xmlhttp.addEventListener("load", onDataLoad);
                xmlhttp.addEventListener('loadend', function() {
                    updateLock = false;
                });
                xmlhttp.open("GET", apiEndpoint);
                xmlhttp.setRequestHeader("Content-Type", "application/json");
                xmlhttp.send();
            }

            function onDataLoad(event) {
                if (this.status != 200) {
                    console.log("Loading data failed.")
                    return;
                }
                try {
                    var data = JSON.parse(this.responseText);
                } catch(e) {
                    console.log("Error parsing json: ", e);
                    return;
                }

                for (key in data) {
                    // Special handling for buttons
                    if (key == "power") {
                        document.getElementById("button-power").classList.toggle('active', data[key]);
                        continue;
                    }
                    if (key == "currentPattern") {
                        Array.from(document.getElementsByClassName("button-modeactivate"))
                            .forEach(function(item) {
                                var decision = parseInt(item.getAttribute('data-value')) == data[key];
                                item.classList.toggle('active', decision);
                                item.closest('.modebox').classList.toggle('active', decision);
                            });
                        continue;
                    }

                    // Otherwise, we search for an input with the correct name
                    var inputs = document.getElementsByName(key);
                    if (inputs.length == 0) {
                        continue;
                    }
                    var input = inputs[0];
                    if (!input.locked) {
                        input.value = data[key];
                    }
                }
            }

            function sendData(key, value) {
                var data = new Object();
                data[key] = value;

                var xmlhttp = new XMLHttpRequest();
                xmlhttp.open("POST", apiEndpoint);
                xmlhttp.setRequestHeader("Content-Type", "application/json");
                xmlhttp.send(JSON.stringify(data));
                xmlhttp.addEventListener("load", function() {
                    // After each data sending do an update immediately to refresh the UI
                    fetchData();
                });
            }


            function fieldTimeoutHandler() {
                if (!this.locked)
                    return;
                var value = this.value;
                this.locked = false;
                if (this.timeout) {
                    clearTimeout(this.timeout);
                    this.timeout = null;
                }

                var dataType = this.getAttribute('data-type');
                if (dataType === "int") {
                    value = parseInt(value);
                } else if (dataType === "float") {
                    value = parseFloat(value);
                }
                sendData(this.name, value);
            }

            function fieldChangeHandler(event) {
                this.locked = true;
                if (this.timeout) {
                    clearTimeout(this.timeout);
                }
                this.timeout = setTimeout(fieldTimeoutHandler.bind(this), 1000);
            }

            // Onload function
            document.addEventListener("DOMContentLoaded", function () {
                // Register onChange handler for input fields
                Array.from(document.getElementsByClassName("activeInput"))
                    .forEach(function(input) {
                        input.addEventListener("keydown", fieldChangeHandler);
                        input.addEventListener("blur", fieldTimeoutHandler);
                    });

                // Register click handler for buttons
                document.getElementById('button-power').addEventListener('click', function(){
                    var value = !this.classList.contains('active');
                    sendData('power', value);
                });
                Array.from(document.getElementsByClassName("button-modeactivate"))
                    .forEach(function(input) {
                        input.addEventListener('click', function(){
                            var value = parseInt(this.getAttribute('data-value'));
                            sendData('currentPattern', value);
                        });
                    });

                // Cyclic update of current settings
                setInterval(fetchData, 15000);
                // Update settings instantly
                fetchData();
            });
        </script>
        <style type="text/css">
            html {
                padding: 0;
                margin: 0;
            }
            body {
                background: #555;
                color: #ddd;
                text-shadow: 0 0 5px rgba(0, 0, 0, .3);
                margin: 0;
                padding: 51px 10px;
            }
            #header, #footer {
                position: fixed;
                left: 0;
                right: 0;
                height: 30px;
                padding: 5px 10px;
                background: #000;
                background: linear-gradient(180deg, #333, #111);
                box-shadow: 0 0 10px rgba(180, 180, 180, .3);
            }
            #header {
                top: 0;
                border-bottom: solid 1px #111;
            }
            #footer {
                bottom: 0;
                border-top: solid 1px #444;
            }
            .container {
                max-width: 600px;
                margin: 0 auto;
            }
            

            button, input {
                line-height: 20px;
                padding: 4px 8px;
                border-radius: 4px;
                border: solid 1px rgba(100, 100, 100, .5);
            }
            button {
                background-color: #999;
                background-image: linear-gradient(180deg, rgba(160,160,160,.5), rgba(80,80,80,.5));
            }
            button.active {
                color: #fff;
                background-image: linear-gradient(0deg, rgba(130,130,130,.5), rgba(60,60,60,.5));
            }


            #title {
                font-size: 1.2em;
                font-weight: bold;
                line-height: 30px;
            }
            #button-power {
                float: right;
                background-color: #5d5;
            }

            .modebox {
                margin-bottom: 10px;
                padding: 10px;
                border-radius: 6px;
                background: rgba(255, 127, 127, .15);
                border: solid 1px rgba(255, 127, 127, .3);
            }
            .modebox.active {
                background: rgba(255, 127, 127, .4);
            }
            .button-modeactivate {
                background-color: #d55;
                display: block;
                margin-bottom: 10px;
            }

            table.form-layout {
                width: 100%;
            }
            table.form-layout td>input {
                width: 100%;
                box-sizing: border-box;
            }
            #footer table.form-layout {
                border-spacing: 0;
            }
            #footer table.form-layout td {
                padding: 0;
            }
        </style>
    </head>
    <body>
        <div id="header">
            <div class="container">
                <button type="button" id="button-power" class="active">ON</button>
                <div id="title">LED-Bilderrahmen</div>
            </div>
        </div>


        <div class="container">
            <div class="modebox">
                <button type="button" class="button-modeactivate" data-value="0">Colorful</button>

                <table class="form-layout">
                    <tr><td>Geschwindigkeit:</td><td><input type="number" class="activeInput" name="colorful_speed" min="0" max="100" data-type="int" /></td></tr>
                    <tr><td>Sättigung:</td><td><input type="number" class="activeInput" name="colorful_sat" min="0" max="100" data-type="int" /></td><td>%</td></tr>
                </table>
            </div>

            <div class="modebox">
                <button type="button" class="button-modeactivate" data-value="1">Rainbow Fade</button>

                <table class="form-layout">
                    <tr><td>Geschwindigkeit:</td><td><input type="number" class="activeInput" name="rainbow_fade_speed" min="0" max="100" data-type="int" /></td></tr>
                    <tr><td>Sättigung:</td><td><input type="number" class="activeInput" name="rainbow_fade_sat" min="0" max="100" data-type="int" /></td><td>%</td></tr>
                    <tr><td>Ausdehung:</td><td><input type="number" class="activeInput" name="rainbow_fade_size" min="1" max="100" data-type="int" /></td></tr>
                    <tr><td>Richtung:</td><td><input type="number" class="activeInput" name="rainbow_fade_direction" min="0" max="360" data-type="int" /></td><td>°</td></tr>
                </table>
            </div>

            <div class="modebox">
                <button type="button" class="button-modeactivate" data-value="2">Sparkles</button>

                <table class="form-layout">
                    <tr><td>Sättigung:</td><td><input type="number" class="activeInput" name="sparkles_sat" min="0" max="100" data-type="int" /></td><td>%</td></tr>
                    <tr><td>Verblassen:</td><td><input type="number" class="activeInput" name="sparkles_fade" min="0" max="100" data-type="int" /></td></tr>
                    <tr><td>Häufigkeit:</td><td><input type="number" class="activeInput" name="sparkles_rate" min="0" max="100" data-type="int" /></td></tr>
                </table>
            </div>

            <div class="modebox">
                <button type="button" class="button-modeactivate" data-value="3">Fire</button>
            </div>
        </div>

        <div id="footer">
            <div class="container">
                <table class="form-layout">
                    <tr><td>Helligkeit:</td><td><input type="number" class="activeInput" name="brightness" min="0" max="100" data-type="int" /></td><td>%</td></tr>
                </table>
            </div>
        </div>
    </body>
</html>